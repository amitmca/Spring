<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx    http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<annotation-driven />

	<context:property-placeholder location="classpath:app.properties" />
	<context:component-scan base-package="com.technicalkeeda"  />

	<beans:bean id="dataSource" 
      class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <beans:property name="driverClassName" value="${app.jdbc.driverClassName}" />
        <beans:property name="url" value="${app.jdbc.url}" />
        <beans:property name="username" value="${app.jdbc.username}" />
        <beans:property name="password" value="${app.jdbc.password}" />
    </beans:bean>
   
    
    <beans:bean id="hibernateJpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
    
     <!-- Creates the bean that creates the JPA entity manager factory. -->
    <beans:bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <beans:property name="dataSource" ref="dataSource"/>
        <beans:property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter"/>
        <beans:property name="packagesToScan" value="com.technicalkeeda.bean"/>
        <beans:property name="jpaProperties">
            <beans:props>
                <!--
                    Configures the used database dialect. This allows Hibernate to create SQL
                    that is optimized for the used database.
                -->
                <beans:prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</beans:prop>

                <!--
                    Specifies the action that is invoked to the database when the Hibernate
                    SessionFactory is created or closed.
                -->
                <beans:prop key="hibernate.hbm2ddl.auto">update</beans:prop>

                <!--
                    Configures the naming strategy that is used when Hibernate creates
                    new database objects and schema elements
                -->
                <beans:prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</beans:prop>

                <!--
                    If the value of this property is true, Hibernate writes all SQL
                    statements to the console.
                -->
                <beans:prop key="hibernate.show_sql">true</beans:prop>

                <!--
                    If the value of this property is true, Hibernate will use prettyprint
                    when it writes SQL to the console.
                -->
                <beans:prop key="hibernate.format_sql">true</beans:prop>
            </beans:props>
        </beans:property>
    </beans:bean>
    
    <jpa:repositories base-package="com.technicalkeeda.repository"/>
</beans:beans>
