<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- Spring will start reading @transactional annotation in another words 
		we are activating annotation based transaction here using below tag -->
	<context:annotation-config />

	<!-- Adds transactional scope and wraps code in transaction semantics automatically -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- PlatformTransactionManager which are going to drive transaction -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<!-- DataSource to connect mysql database -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
		<property name="url" value="jdbc:mysql://localhost:3306/springdb"></property>
		<property name="username" value="root"></property>
		<property name="password" value=""></property>
	</bean>

	<!-- JdbcTemplate bean to execute query -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<!-- Our main DAO class bean object which we are making transactional -->
	<bean id="personDAO" class="com.javahonk.dao.PersonDAO">
		<property name="jdbcTemplate" ref="jdbcTemplate"></property>
	</bean>


</beans>